<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "events".
 *
 * @property int $id
 * @property string $_id
 * @property string $city
 * @property string $start
 * @property string $end
 * @property string $min
 * @property string $max
 * @property string $event_id
 * @property string $occurrence
 * @property string $owner
 * @property int $postal
 * @property string $street
 * @property double $lat
 * @property double $lon
 * @property int $modified
 * @property int $deleted
 * @property string $image_id
 * @property string $image_path
 * @property string $title_is
 * @property string $title_en
 * @property string $text_is
 * @property string $text_en
 * @property string $place_is
 * @property string $place_en
 * @property string $raw
 * @property string $created
 */
class Events extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'events';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['start', 'end', 'min', 'max', 'created'], 'safe'],
            [['postal', 'modified', 'deleted'], 'integer'],
            [['lat', 'lon'], 'number'],
            [['text_is', 'text_en', 'raw'], 'string'],
            [['_id', 'event_id', 'occurrence', 'owner', 'street', 'image_id', 'image_path'], 'string', 'max' => 100],
            [['city'], 'string', 'max' => 150],
            [['title_is', 'title_en', 'place_is', 'place_en'], 'string', 'max' => 300],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            '_id' => 'Id',
            'city' => 'City',
            'start' => 'Start',
            'end' => 'End',
            'min' => 'Min',
            'max' => 'Max',
            'event_id' => 'Event ID',
            'occurrence' => 'Occurrence',
            'owner' => 'Owner',
            'postal' => 'Postal',
            'street' => 'Street',
            'lat' => 'Lat',
            'lon' => 'Lon',
            'modified' => 'Modified',
            'deleted' => 'Deleted',
            'image_id' => 'Image ID',
            'image_path' => 'Image Path',
            'title_is' => 'Title Is',
            'title_en' => 'Title En',
            'text_is' => 'Text Is',
            'text_en' => 'Text En',
            'place_is' => 'Place Is',
            'place_en' => 'Place En',
            'raw' => 'Raw',
            'created' => 'Created',
        ];
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        if($this->min == '0000-00-00 00:00:00'){
            $this->min = null;
            $this->max = null;
        }
    }
}
